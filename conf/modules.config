/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args   = '--quiet'
        publishDir = [
            path: { "${params.outdir}/QC_shortreads/fastqc" },
            mode: params.publish_dir_mode,
            pattern: "*.html"
        ]
        ext.prefix = { "${meta.id}_run${meta.run}_raw" }
        tag        = { "${meta.id}_run${meta.run}_raw" }
    }

    withName: FASTP {
        ext.args   = [
            "-q ${params.fastp_qualified_quality}",
            "--cut_front",
            "--cut_tail",
            "--cut_mean_quality ${params.fastp_cut_mean_quality}",
            "--length_required ${params.reads_minlength}"
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/fastp/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}"
            ],
            [
                path: { "${params.outdir}/fastp/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz",
                //enabled: params.save_clipped_reads
            ]
        ]
        ext.prefix = { "${meta.id}_run${meta.run}_fastp" }
        tag        = { "${meta.id}_run${meta.run}" }
    }

    //pattern: "*.{fa.gz,log}" //'pattern' didnt work, probably because the output is in a folder, solved with 'saveAs'
    withName: MEGAHIT {
        ext.args   = [
            "--k-list ${params.megahit_kmer_list}",
            "--min-contig-len ${params.megahit_min_contig_len}"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/Assembly" },
            mode: params.publish_dir_mode,
            saveAs: { filename ->
                filename.equals('versions.yml')
                    ? null
                    : filename.indexOf('.contigs.fa.gz') > 0
                        ? filename
                        : filename.indexOf('.log') > 0 ? filename : null
            }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}
/*
    withName: METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS {
        publishDir = [path: { "${params.outdir}/GenomeBinning/depths/contigs" }, mode: params.publish_dir_mode, pattern: '*-depth.txt.gz']
        ext.prefix = { "${meta.assembler}-${meta.id}-depth" }
    }

    withName: METABAT2_METABAT2 {
        publishDir = [[path: { "${params.outdir}/GenomeBinning/MetaBAT2/bins/" }, mode: params.publish_dir_mode, pattern: '*[!lowDepth|tooShort|unbinned].fa.gz'], [path: { "${params.outdir}/GenomeBinning/MetaBAT2/discarded" }, mode: params.publish_dir_mode, pattern: '*tooShort.fa.gz'], [path: { "${params.outdir}/GenomeBinning/MetaBAT2/discarded" }, mode: params.publish_dir_mode, pattern: '*lowDepth.fa.gz']]
        ext.prefix = { "${meta.assembler}-MetaBAT2-${meta.id}" }
        ext.args   = [
            params.min_contig_size < 1500 ? "-m 1500" : "-m ${params.min_contig_size}",
            "--unbinned",
            "--seed ${params.metabat_rng_seed}"
        ].join(' ').trim()
    }


*/
